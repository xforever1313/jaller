@*
//
// Jaller - An advanced IPFS Gateway
// Copyright (C) 2025 Seth Hendrick
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
// 
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
*@

@page

@model Jaller.Server.Pages.Folder.AddModel

@if( string.IsNullOrWhiteSpace( this.Model.ErrorMessage ) == false )
{
    ViewData["Title"] = "Can not find parent folder";
    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-danger">
                @if( this.Model.ErrorMessage is null )
                {
                    <p>Unknown Error :(</p>
                }
                else
                {
                    <p>@this.Model.ErrorMessage</p>
                }
            </div>
        </div>
    </div>
}
else
{
    @if( this.Model.InfoMessage is not null )
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-info">
                    <ul>
                        @foreach( string message in this.Model.InfoMessage.ReadLines() )
                        {
                            <li>@message</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }

    @if( this.Model.WarningMessage is not null )
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-warning">
                    <p>Warnings when trying to add folder:</p>
                    <ul>
                        @foreach( string message in this.Model.WarningMessage.ReadLines() )
                        {
                            <li>@message</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }

    @if( this.Model.ErrorMessage is not null )
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-danger">
                    <p>Errors when adding folder:</p>
                    <ul>
                        @foreach( string message in this.Model.ErrorMessage.ReadLines() )
                        {
                            <li>@message</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }

    string folderName = this.Model.ParentFolder?.Name ?? "Root";
    ViewData["Title"] = $"Add sub-folder to {folderName}";

    <div class="row">
        <div class="col-md-12">
            <form class="form-group" method="post" enctype="multipart/form-data">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3>Add sub-folder to @folderName</h3>
                    </div>
                    <div class="panel-body">
                        <input type="hidden" name="Id" value="0" readonly/>
                        <p>
                            <label for="nameInput">Folder Name</label>
                        </p>
                        <p>
                            <input id="nameInput" class="form-control" type="text" name="Name" value="Untitled" />
                        </p>
                        <partial name="_MetadataPolicyDropDown"/>
                        <partial name="_DownloadPolicyDropDown" />
                    </div>
                    <div class="panel-footer">
                        <button class="btn btn-primary" type="submit" id="uploadButton">Create Folder</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
}