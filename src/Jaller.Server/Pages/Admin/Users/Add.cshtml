@*
//
// Jaller - An advanced IPFS Gateway
// Copyright (C) 2025 Seth Hendrick
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
// 
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
*@

@page

@model Jaller.Server.Pages.Admin.Users.AddModel

@{
    ViewData["Title"] = "Add User";

    const string warningHeader = "Warnings when adding new user:";
    const string errorHeader = "Errors when adding new user:";
}

<partial name="_Alert" model="this.Model.ToAlertModel( warningHeading: warningHeader, errorHeading: errorHeader )" />

<div class="row">
    <div class="col-md-12">
        <form class="form-group" method="post" enctype="multipart/form-data">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3>Add New User</h3>
                </div>
                <div class="panel-body">
                    <p>
                        <label for="emailInput">User Email</label>
                    </p>
                    <p>
                        <input id="emailInput" class="form-control" type="email" name="@nameof( this.Model.UserEmail )" value="" required />
                    </p>
                    <p>
                        <label for="passwordInput">Password</label>
                    </p>
                    <p>
                        <input id="passwordInput" class="form-control" type="password" name="@nameof( this.Model.Password )" value="" required />
                    </p>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4>User Roles</h4>
                        </div>
                        <div class="panel-body">
                            <p class="checkbox">
                                <label for="isEditorCheckBox">
                                    <input id="isEditorCheckBox" type="checkbox" asp-for="IsEditor" />
                                    Editor
                                </label>
                            </p>
                            <p class="checkbox">
                                <label for="isUploaderCheckBox">
                                    <input id="isUploaderCheckBox" type="checkbox" asp-for="IsUploader" />
                                    Uploader
                                </label>
                            </p>
                            <p class="checkbox">
                                <label for="isAdminCheckBox">
                                    <input id="isAdminCheckBox" type="checkbox" asp-for="IsAdmin" />
                                    Administrator
                                </label>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <button class="btn btn-primary" type="submit" id="uploadButton">Add User</button>
                </div>
            </div>  
        </form>
    </div>
</div>

@section scripts 
{
    <script>
        var uploadButton;
        var emailInput;
        var passwordInput;

        window.onload = function()
        {
            uploadButton = document.getElementById( "uploadButton" );
            uploadButton.disabled = true; // Disabled by default since we won't have files right away.

            emailInput = document.getElementById( "emailInput" );
            passwordInput = document.getElementById( "passwordInput" );

            emailInput.addEventListener( 'input', checkForm );
            passwordInput.addEventListener( 'input', checkForm );
            checkForm();
        }

        function checkForm() {
            const isEmailValid = emailInput.validity.valid && emailInput.value.trim() !== '';
            const isPasswordValid = passwordInput.textLength > 0;
            uploadButton.disabled = !( isEmailValid && isPasswordValid );
        }
    </script>
}